<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.TechnicianMapper">
    
    <resultMap type="Technician" id="TechnicianResult">
        <result property="id"    column="id"    />
        <result property="employeeId"    column="employee_id"    />
        <result property="gender"    column="gender"    />
        <result property="age"    column="age"    />
        <result property="name"    column="name"    />
        <result property="title"    column="title"    />
        <result property="speciality"    column="speciality"    />
    </resultMap>

    <sql id="selectTechnicianVo">
        select id, employee_id, gender, age, name, title, speciality from technician
    </sql>

    <select id="selectTechnicianList" parameterType="Technician" resultMap="TechnicianResult">
        <include refid="selectTechnicianVo"/>
        <where>  
            <if test="employeeId != null  and employeeId != ''"> and employee_id = #{employeeId}</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="age != null "> and age = #{age}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="title != null  and title != ''"> and title = #{title}</if>
            <if test="speciality != null  and speciality != ''"> and speciality = #{speciality}</if>
        </where>
    </select>
    
    <select id="selectTechnicianById" parameterType="Long" resultMap="TechnicianResult">
        <include refid="selectTechnicianVo"/>
        where id = #{id}
    </select>

    <insert id="insertTechnician" parameterType="Technician" useGeneratedKeys="true" keyProperty="id">
        insert into technician
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="employeeId != null and employeeId != ''">employee_id,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="age != null">age,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="title != null">title,</if>
            <if test="speciality != null">speciality,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="employeeId != null and employeeId != ''">#{employeeId},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="age != null">#{age},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="title != null">#{title},</if>
            <if test="speciality != null">#{speciality},</if>
         </trim>
    </insert>

    <update id="updateTechnician" parameterType="Technician">
        update technician
        <trim prefix="SET" suffixOverrides=",">
            <if test="employeeId != null and employeeId != ''">employee_id = #{employeeId},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="age != null">age = #{age},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="title != null">title = #{title},</if>
            <if test="speciality != null">speciality = #{speciality},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTechnicianById" parameterType="Long">
        delete from technician where id = #{id}
    </delete>

    <delete id="deleteTechnicianByIds" parameterType="String">
        delete from technician where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>